// Code generated by MockGen. DO NOT EDIT.
// Source: escort-book-user-log-consumer/repositories (interfaces: IRequestLogRepository)

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	models "escort-book-user-log-consumer/models"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockIRequestLogRepository is a mock of IRequestLogRepository interface.
type MockIRequestLogRepository struct {
	ctrl     *gomock.Controller
	recorder *MockIRequestLogRepositoryMockRecorder
}

// MockIRequestLogRepositoryMockRecorder is the mock recorder for MockIRequestLogRepository.
type MockIRequestLogRepositoryMockRecorder struct {
	mock *MockIRequestLogRepository
}

// NewMockIRequestLogRepository creates a new mock instance.
func NewMockIRequestLogRepository(ctrl *gomock.Controller) *MockIRequestLogRepository {
	mock := &MockIRequestLogRepository{ctrl: ctrl}
	mock.recorder = &MockIRequestLogRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIRequestLogRepository) EXPECT() *MockIRequestLogRepositoryMockRecorder {
	return m.recorder
}

// Create mocks base method.
func (m *MockIRequestLogRepository) Create(arg0 context.Context, arg1 models.RequestLog) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// Create indicates an expected call of Create.
func (mr *MockIRequestLogRepositoryMockRecorder) Create(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockIRequestLogRepository)(nil).Create), arg0, arg1)
}
