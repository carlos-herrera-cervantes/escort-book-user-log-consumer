// Code generated by MockGen. DO NOT EDIT.
// Source: escort-book-user-log-consumer/repositories (interfaces: IConnectionLogRepository)

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	models "escort-book-user-log-consumer/models"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockIConnectionLogRepository is a mock of IConnectionLogRepository interface.
type MockIConnectionLogRepository struct {
	ctrl     *gomock.Controller
	recorder *MockIConnectionLogRepositoryMockRecorder
}

// MockIConnectionLogRepositoryMockRecorder is the mock recorder for MockIConnectionLogRepository.
type MockIConnectionLogRepositoryMockRecorder struct {
	mock *MockIConnectionLogRepository
}

// NewMockIConnectionLogRepository creates a new mock instance.
func NewMockIConnectionLogRepository(ctrl *gomock.Controller) *MockIConnectionLogRepository {
	mock := &MockIConnectionLogRepository{ctrl: ctrl}
	mock.recorder = &MockIConnectionLogRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIConnectionLogRepository) EXPECT() *MockIConnectionLogRepositoryMockRecorder {
	return m.recorder
}

// Create mocks base method.
func (m *MockIConnectionLogRepository) Create(arg0 context.Context, arg1 models.ConnectionLog) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// Create indicates an expected call of Create.
func (mr *MockIConnectionLogRepositoryMockRecorder) Create(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockIConnectionLogRepository)(nil).Create), arg0, arg1)
}

// GetByUserId mocks base method.
func (m *MockIConnectionLogRepository) GetByUserId(arg0 context.Context, arg1 string) (models.ConnectionLog, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetByUserId", arg0, arg1)
	ret0, _ := ret[0].(models.ConnectionLog)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetByUserId indicates an expected call of GetByUserId.
func (mr *MockIConnectionLogRepositoryMockRecorder) GetByUserId(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetByUserId", reflect.TypeOf((*MockIConnectionLogRepository)(nil).GetByUserId), arg0, arg1)
}

// UpdateById mocks base method.
func (m *MockIConnectionLogRepository) UpdateById(arg0 context.Context, arg1 string, arg2 models.ConnectionLog) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateById", arg0, arg1, arg2)
	ret0, _ := ret[0].(error)
	return ret0
}

// UpdateById indicates an expected call of UpdateById.
func (mr *MockIConnectionLogRepositoryMockRecorder) UpdateById(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateById", reflect.TypeOf((*MockIConnectionLogRepository)(nil).UpdateById), arg0, arg1, arg2)
}
